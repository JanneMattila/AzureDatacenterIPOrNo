{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    }
  },
  "variables": {
    "ipCheckAppPlanName": "ipCheckAppPlan",
    "ipCheckAppName": "[concat('ipc', uniqueString(resourceGroup().id))]",
    "ipCheckStorageName": "[concat('ipcs', uniqueString(resourceGroup().id))]",
    "ipCheckAppInsightsName": "ipCheckAppInsights"
  },
  "resources": [
    {
      "name": "[variables('ipCheckStorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('storageType')]"
      },
      "dependsOn": [],
      "tags": {},
      "kind": "Storage"
    },
    {
      "name": "[variables('ipCheckAppInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01",
      "kind": "other",
      "dependsOn": [],
      "tags": {},
      "properties": {
        "applicationId": "[resourceId('Microsoft.Web/sites', variables('ipCheckAppName'))]"
      }
    },
    {
      "name": "[variables('ipCheckAppPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-04-01",
      "dependsOn": [],
      "tags": {},
      "properties": {
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "name": "[variables('ipCheckAppName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-08-01",
      "kind": "functionapp",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('ipCheckAppPlanName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('ipCheckStorageName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('ipCheckAppPlanName'))]": "Resource"
      },
      "properties": {
        "name": "[variables('ipCheckAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', variables('ipCheckAppPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('ipCheckStorageName'), ';AccountKey=', listKeys(variables('ipCheckStorageName'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('ipCheckStorageName'), ';AccountKey=', listKeys(variables('ipCheckStorageName'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('ipCheckAppInsightsName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('ipCheckStorageName'), ';AccountKey=', listKeys(variables('ipCheckStorageName'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('ipCheckAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "beta"
            }
          ]
        }
      }
    },
    {
      "name": "ipCheckPingTest",
      "type": "Microsoft.Insights/webtests",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01",
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('ipCheckAppInsightsName'))]",
        "[resourceId('Microsoft.Web/sites', variables('ipCheckAppName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceId('Microsoft.Insights/components', variables('ipCheckAppInsightsName')))]": "Resource"
      },
      "properties": {
        "SyntheticMonitorId": "ipCheckPingTest",
        "Name": "ipCheckPing",
        "Description": "Ip Check ping test",
        "Enabled": true,
        "Frequency": 300,
        "Timeout": 120,
        "Kind": "ping",
        "Locations": [
          {
            "Id": "emea-se-sto-edge"
          },
          {
            "Id": "emea-nl-ams-azr"
          }
        ],
        "Configuration": {
          "WebTest": "[concat('<WebTest Name=\"frontPagePing\" Id=\"bd64298a-fed7-46bf-b6e4-424a4dd671c2\"  Enabled=\"True\"  Timeout=\"120\" xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\" PreAuthenticate=\"True\" Proxy=\"default\">        <Items>        <Request         Method=\"GET\"         Guid=\"af2d44c8-86e8-7ab0-bc73-e12c778c60ea\"         Version=\"1.1\"         Url=\"', concat('http://',reference(resourceId('Microsoft.Web/sites', variables('ipCheckAppName'))).hostNames[0]), '\"         ThinkTime=\"0\"         Timeout=\"120\"         ParseDependentRequests=\"True\"         FollowRedirects=\"True\"         RecordResult=\"True\"         Cache=\"False\"         ResponseTimeGoal=\"0\"         Encoding=\"utf-8\"         ExpectedHttpStatusCode=\"200\"         ExpectedResponseUrl=\"\"         ReportingName=\"\"         IgnoreHttpStatusCode=\"False\" />        </Items>        </WebTest>')]"
        }
      }
    }
  ],
  "outputs": {
    "webAppName": {
      "type": "string",
      "value": "[variables('ipCheckAppName')]"
    },
    "webAppUri": {
      "type": "string",
      "value": "[concat('http://',reference(resourceId('Microsoft.Web/sites', variables('ipCheckAppName'))).hostNames[0])]"
    }
  }
}